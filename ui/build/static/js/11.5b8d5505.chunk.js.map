{"version":3,"sources":["utils/helper.js","utils/api.js","services/api/index.js","components/Auth/text-error.js","assets/images/bg-images/bg3.jpg","../node_modules/react-bootstrap/esm/Spinner.js","views/auth/SignIn.js","services/api/auth.js"],"names":["sendResponse","type","message","msg","toast","success","style","borderRadius","background","color","error","errorMessage","warningMessage","infoMessage","Badge","axiosInstance","axios","create","baseURL","BASE_API_URL","authToken","sessionStorage","getItem","interceptors","request","use","async","req","headers","Authorization","response","_error$response","_error$response$data","_helper","data","Promise","reject","SIGN_UP","SIGN_IN","FORGET_PASSWORD","RESET_PASSWORD","VERIFY_OTP","CHANGE_PASSWORD","USER_LIST","TOP_EARNERS","USER_BY_ID","FILTER_USERLIST","FIND_BY_USERNAME","USER_PROFILE","POLICY_HOLDER","TextError","props","_jsx","className","children","_excluded","Spinner","React","forwardRef","_ref","ref","bsPrefix","variant","animation","size","_ref$as","as","Component","_objectWithoutPropertiesLoose","bsSpinnerPrefix","useBootstrapPrefix","createElement","_extends","classNames","displayName","Signin3","history","useHistory","modelData","setModelData","useState","username","password","validate","setValidate","usernameVal","setUsernameVal","loginLoader","setLoginLoader","isRead","setIsRead","useEffect","clear","_jsxs","Fragment","Breadcrumb","backgroundImage","concat","back3","backgroundSize","backgroundAttachment","backgroundPosition","flexDirection","CONSTANTS","form","login","readOnly","placeholder","formFields","userId","value","onChange","e","isNaN","target","trim","length","VALIDATION_MSG","required","Button","disabled","role","onClick","bodyData","checkData","notEmpty","_","every","_response$data","api","post","URL","body","SignIn","_response$data2","_response$data3","_response$data4","_response$data5","setItem","token","email","_id","push","pathname","button"],"mappings":"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","file":"static/js/11.5b8d5505.chunk.js","sourcesContent":["import * as qs from \"query-string\";\nimport toast from \"react-hot-toast\";\nimport { Badge } from \"react-bootstrap\";\n// import { createDecipheriv } from \"crypto\";\n// import { CONFIG } from \"../config/constant\";\n\nexport const getQueryParams = (param) => {\n  const location = window.location.search;\n  const parsed = qs.parse(location);\n  const response =\n    param === \"tab\"\n      ? parseInt(parsed[param] ? parsed[param] : 0)\n      : parsed[param]\n      ? `${parsed[param]}`\n      : \"\";\n  return response;\n};\n\nconst successMessage = (msg) =>\n  toast.success(msg, {\n    style: { borderRadius: \"10px\", background: \"#28a745\", color: \"#fff\" },\n  });\nconst errorMessage = (msg) =>\n  toast.error(msg, {\n    style: { borderRadius: \"10px\", background: \"#dc3545\", color: \"#fff\" },\n  });\nconst infoMessage = (msg) =>\n  toast(msg, {\n    style: { borderRadius: \"10px\", background: \"#17a2b8\", color: \"#fff\" },\n  });\nconst warningMessage = (msg) =>\n  toast(msg, {\n    style: { borderRadius: \"10px\", background: \"#ffc107\", color: \"#fff\" },\n  });\n\nexport const sendResponse = (type, message) => {\n  if (type === \"success\") {\n    successMessage(message);\n  }\n  if (type === \"error\") {\n    errorMessage(message);\n  }\n  if (type === \"warning\") {\n    warningMessage(message);\n  }\n  if (type === \"info\") {\n    infoMessage(message);\n  }\n};\n\nexport const emailValidation = (email) => {\n  const regexp = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n  return regexp.test(email);\n};\nexport const passwordValidation = (password) => {\n  const regexp =\n    /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{4,}$/;\n  return regexp.test(password);\n};\nexport const contactNumberValidation = (contactNumber) => {\n  const regexp = /^[6-9]\\d{9}$/;\n  // const regexp = /^(?:(?:\\+|0{0,2})91(\\s*[\\-]\\s*)?|[0]?)?[6-9]\\d{9}$/\n  return regexp.test(contactNumber);\n};\nexport const numberValidation = (number) => {\n  const regexp = /^\\d+$/;\n  return regexp.test(number);\n};\n\nexport const upiValidation = (upi) => {\n  const regexp = /^\\w+([\\.-]?\\w+)*@\\w+$/;\n  return regexp.test(upi);\n};\n\nexport const successBadge = <Badge variant=\"success\">New</Badge>;\nexport const warningBadge = <Badge variant=\"warning\">Modified</Badge>;\nexport const dangerBadge = <Badge variant=\"danger\">Deleted</Badge>;\n","import axios from 'axios';\nimport * as _helper from './helper';\nimport {BASE_API_URL} from \"../config/constant\"\n\nconst axiosInstance = axios.create({ baseURL:BASE_API_URL });\n\nlet authToken = sessionStorage.getItem('token');\n// let authToken = sessionStorage.getItem('token');\naxiosInstance.interceptors.request.use(async req => {\n    if (!authToken) {\n        authToken = sessionStorage.getItem('token');\n    }\n    // console.log(\"BASE_API_URL\", BASE_API_URL)\n    req.headers.Authorization = authToken\n    // req.headers.Authorization = `Bearer ${authToken}`\n    return req;\n});\n\naxiosInstance.interceptors.response.use(\n    async (response) => {\n        // response.data.data = await _helper.decrypt(response?.data?.data);\n        // console.log(\"Interceptor res\", response)\n    // console.log(\"BASE_API_URL\", BASE_API_URL)\n\n        return response;\n    },\n    (error) => {\n        _helper.sendResponse('error', error?.response?.data?.message);\n        return Promise.reject((error.response && error.response.data) || 'Something went wrong')\n    }\n);\n\nexport default axiosInstance;\n","//auth\nexport const SIGN_UP = \"/auth/signup\";\nexport const SIGN_IN = \"/auth/login\";\nexport const FORGET_PASSWORD = \"/auth/forget-password\";\nexport const RESET_PASSWORD = \"/auth/reset-password\";\nexport const VERIFY_OTP = \"/auth/verify-otp\";\nexport const SET_PASSWORD = \"/auth/reset-password\";\nexport const CHANGE_PASSWORD = \"/auth/change-password\";\n\n// dashboard\nexport const DASHBOARD = \"/dashboard\";\n\n//bank\nexport const BANK = \"/bank\";\nexport const GET_BALANCE = \"/bank/balance\";\n\n// txn\nexport const TXN = \"/txn\";\nexport const TXN_HISTORY = \"/txn/history/\";\nexport const VERIFY_TXN_NUM = \"/txn/verify/\";\nexport const APPROVE_MONEY = \"/txn/approve/\";\nexport const REJECT_MONEY = \"/txn/reject/\";\n\n//color\nexport const COLOR_URL = \"/color\";\nexport const COLOR_JOIN = \"/color/join\";\n\n//lottery\nexport const LOTTERY_URL = \"/lottery\";\nexport const LOTTERY_JOIN = \"/lottery/join\";\n\n// user\nexport const USER_LIST = \"/user/list\";\nexport const TOP_EARNERS = \"/user/top-earners\";\nexport const USER_BY_ID = \"/user/\";\nexport const FILTER_USERLIST = \"/user/filter\";\nexport const FIND_BY_USERNAME = \"/user/username/\";\nexport const USER_PROFILE = \"/user/profile\";\nexport const TRANSFER_BALANCE = \"/user/transfer\";\n\n// downline\nexport const DOWN_DETAILS = \"/down/count-data\";\nexport const DOWN_LIST = \"/down?label=\";\n\nexport const PAY_METHOD = \"/pay\";\n\nexport const POLICY_HOLDER = \"/policy-holder\";","import React from \"react\";\n\nfunction TextError(props) {\n  return (\n    <div className=\"text-error mt-2 text-danger text-left\">\n      {props.children}\n    </div>\n  );\n}\n\nexport default TextError;\n","export default __webpack_public_path__ + \"static/media/bg3.07b06c00.jpg\";","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"bsPrefix\", \"variant\", \"animation\", \"size\", \"children\", \"as\", \"className\"];\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar Spinner = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      variant = _ref.variant,\n      animation = _ref.animation,\n      size = _ref.size,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, _excluded);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'spinner');\n  var bsSpinnerPrefix = bsPrefix + \"-\" + animation;\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsSpinnerPrefix, size && bsSpinnerPrefix + \"-\" + size, variant && \"text-\" + variant)\n  }), children);\n});\nSpinner.displayName = 'Spinner';\nexport default Spinner;","import React, { useState, useEffect } from \"react\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport * as _ from \"lodash\";\nimport Breadcrumb from \"../../layouts/AdminLayout/Breadcrumb\";\nimport back3 from \"../../assets/images/bg-images/bg3.jpg\";\nimport TextError from \"../../components/Auth/text-error\";\nimport * as _helper from \"../../utils/helper\";\nimport { SignIn } from \"../../services/api/auth\";\nimport { Button, Spinner } from \"react-bootstrap\";\nimport { CONSTANTS, VALIDATION_MSG } from \"../../config/dataConstant\";\n\nconst Signin3 = () => {\n  const history = useHistory();\n  const [modelData, setModelData] = useState({\n    username: \"\",\n    password: \"\",\n  });\n\n  const [validate, setValidate] = useState(false);\n  const [usernameVal, setUsernameVal] = useState(false);\n  const [loginLoader, setLoginLoader] = useState(false);\n  // const [passwordVal, setPasswordVal] = useState(false)\n  const [isRead, setIsRead] = useState(false);\n\n  useEffect(() => {\n    sessionStorage.clear();\n  }, []);\n\n  const handleSubmit = async () => {\n    setIsRead(true);\n    let bodyData = modelData;\n    let checkData = { ...bodyData };\n    const notEmpty = await _.values(checkData).every(_.negate(_.isEmpty));\n    setValidate(true);\n    setLoginLoader(true);\n    if (notEmpty == true) {\n      const response = await SignIn(bodyData);\n      if (response?.data?.success) {\n        setLoginLoader(false);\n        sessionStorage.setItem(\"token\", response?.data?.data.token);\n        sessionStorage.setItem(\"username\", response?.data?.data.username);\n        sessionStorage.setItem(\"email\", response?.data?.data.email);\n        sessionStorage.setItem(\"userId\", response?.data?.data._id);\n        sessionStorage.setItem(\"pId\", 1);\n        history.push({ pathname: \"/dashboard\" });\n        setValidate(false);\n      } else {\n        setLoginLoader(false);\n        history.push({ pathname: \"/auth/signin\" });\n      }\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Breadcrumb />\n      <div\n        className=\"auth-wrapper aut-bg-img\"\n        style={{\n          backgroundImage: `url(${back3})`,\n          backgroundSize: \"cover\",\n          backgroundAttachment: \"fixed\",\n          backgroundPosition: \"center\",\n          flexDirection: \"column\",\n        }}\n      >\n        <div className=\"auth-content \">\n          <div className=\"text-white\">\n            <div className=\"card-body text-center\">\n              <div className=\"mb-4\">\n                <i className=\"feather icon-unlock auth-icon\" />\n              </div>\n              <h3 className=\"mb-4 text-white\">{CONSTANTS.form.login}</h3>\n              <div className=\"input-group mb-3\">\n                <div className=\"input-group\">\n                  <input\n                    readOnly={isRead}\n                    type=\"text\"\n                    className=\"form-control text-white w-100\"\n                    placeholder={CONSTANTS.formFields.userId}\n                    value={modelData.username}\n                    onChange={(e) => {\n                      if (!isNaN(e.target.value)) {\n                        if (e.target.value.trim().length == 8) {\n                          setUsernameVal(false);\n                        } else {\n                          setUsernameVal(true);\n                        }\n                        setModelData({\n                          ...modelData,\n                          username: e.target.value.trim(),\n                        });\n                      }\n                    }}\n                  />\n                </div>\n                {validate && !modelData.username ? (\n                  <TextError children={VALIDATION_MSG.req} />\n                ) : null}\n                {usernameVal && modelData.username ? (\n                  <TextError children={VALIDATION_MSG.username.length} />\n                ) : null}\n              </div>\n\n              <div className=\"input-group mb-4\">\n                <div className=\"input-group\">\n                  <input\n                    readOnly={isRead}\n                    type=\"password\"\n                    className=\"form-control text-white\"\n                    placeholder={CONSTANTS.formFields.password}\n                    value={modelData.password}\n                    onChange={(e) => {\n                      // if (!_helper.passwordValidation(e.target.value.trim())) {\n                      //     setPasswordVal(true);\n                      // } else {\n                      //     setPasswordVal(false);\n                      // }\n                      setModelData({\n                        ...modelData,\n                        password: e.target.value.trim(),\n                      });\n                    }}\n                  />\n                </div>\n\n                {validate && !modelData.password ? (\n                  <TextError children={VALIDATION_MSG.required} />\n                ) : null}\n                {/* {passwordVal && modelData.password ? <TextError children={VALIDATION_MSG.password.minLength} /> : null} */}\n              </div>\n              {loginLoader ? (\n                <Button variant=\"primary\" className=\"mb-4\" disabled>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                </Button>\n              ) : (\n                <Button\n                  className=\"btn btn-primary shadow-2 mb-4\"\n                  onClick={handleSubmit}\n                >\n                  {CONSTANTS.button.login}\n                </Button>\n              )}             \n            </div>\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default Signin3;\n","import api from \"../../utils/api\";\nimport * as _helper from \"../../utils/helper\";\nimport * as URL from \"./index\";\n\nexport const SignUp = async (body) => {\n  try {\n    const response = await api.post(URL.SIGN_UP, body);\n    _helper.sendResponse(\"success\", response.data.message);\n\n    // console.log(\"response signup** \", response)\n    return response;\n  } catch (error) {\n    _helper.sendResponse(\"error\", error.message);\n    // console.log(error,\"<<\")\n    return;\n  }\n};\n\nexport const SignIn = async (body) => {\n  try {\n    const response = await api.post(URL.SIGN_IN, body);\n    if (!response?.data.success) {\n      _helper.sendResponse(\"warning\", response.data.message);\n      return response;\n    } else {\n      // console.log(\"response login** \", response)\n      return response;\n    }\n  } catch (error) {\n    // _helper.sendResponse('error', error.message)\n    // console.log(error,\"<<\")\n    return;\n  }\n};\n\nexport const ForgetPassword = async (body) => {\n  try {\n    const response = await api.put(URL.FORGET_PASSWORD, body);\n    _helper.sendResponse(\"success\", response.data.message);\n\n    // console.log(\"ForgetPassword response\", response)\n    return response;\n  } catch (error) {\n    _helper.sendResponse(\"error\", error.message);\n    // console.log(error,\"<<\")\n    return;\n  }\n};\n\nexport const ResetPassword = async (body) => {\n  try {\n    const response = await api.put(URL.RESET_PASSWORD, body);\n    _helper.sendResponse(\"success\", response.data.message);\n\n    // console.log(\"Password reset successfully\", response)\n    return response;\n  } catch (error) {\n    _helper.sendResponse(\"error\", error.message);\n    // console.log(error,\"<<\")\n    return;\n  }\n};\n\nexport const VerifyOTP = async (body) => {\n  try {\n    const response = await api.post(URL.VERIFY_OTP, body);\n    _helper.sendResponse(\"success\", response.data.message);\n\n    // console.log(\"response VerifyOTP** \", response)\n    return response;\n  } catch (error) {\n    _helper.sendResponse(\"error\", error.message);\n    // console.log(error,\"<<\")\n    return;\n  }\n};\n\nexport const ChangePassword = async (body) => {\n  try {\n    const response = await api.put(URL.CHANGE_PASSWORD, body);\n    _helper.sendResponse(\"success\", response.message);\n\n    // console.log(\"Password changed successfully\", response)\n    return response;\n  } catch (error) {\n    _helper.sendResponse(\"error\", error.message);\n    // console.log(error,\"<<\")\n    return;\n  }\n};\n"],"sourceRoot":""}